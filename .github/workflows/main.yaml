name: main

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker
        options: --privileged
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Docker Compose
        run: |
          cd infra/
          echo "POSTGRES_PASSWORD=password" >> .env
          docker compose -f docker-compose-test.yaml up -d --build
      - name: Run Pytest
        run: |
          sleep 3
          docker compose -f ./infra/docker-compose-test.yaml exec wb_service pytest --cov --cov-fail-under=90 --cov-report term-missing --cov-report xml:coverage.xml
          docker cp $(docker compose -f ./infra/docker-compose-test.yaml ps -q wb_service):/app/coverage.xml ./coverage.xml
      - name: Tear down Docker Compose
        if: always()
        run: docker compose -f ./infra/docker-compose-test.yaml down
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.CONTAINER_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "infra/docker-compose-prod.yaml"
        target: ${{ secrets.PROJECT_NAME }}
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ${{ secrets.PROJECT_NAME }}
          mv ./infra/docker-compose-prod.yaml .
          rmdir infra/
          sudo docker compose -f docker-compose-prod.yaml pull
          sudo docker compose -f docker-compose-prod.yaml down
          sudo docker compose -f docker-compose-prod.yaml up -d
          sudo docker compose -f docker-compose-prod.yaml exec wb_service alembic upgrade head

  send_message:
    name: Send message
    runs-on: ubuntu-latest
    needs:
      - test
      - build_and_push_to_docker_hub
      - deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} выполнил слияния в ветку "main" ${{ github.event.commits[0].message }}!
          Обновленный проект развернут на сервере!
          Ссылка на коммит - https://github.com/${{ github.repository }}/commit/${{github.sha}}
